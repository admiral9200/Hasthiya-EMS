export const getQueryProxy = (searchParams) => {
    const query = searchParamsToQuery(searchParams);
    return new Proxy(query, {
        set(target, property, newValue) {
            if (newValue == null)
                return true;
            Reflect.set(target, property, newValue);
            if (Array.isArray(newValue)) {
                searchParams.delete(property);
                newValue.forEach((value) => searchParams.append(property, value));
            }
            else {
                searchParams.set(property, newValue);
            }
            return true;
        },
        defineProperty(target, property, attributes) {
            const { configurable, enumerable, writable, value } = attributes;
            if (configurable && enumerable && writable && value != null) {
                Reflect.defineProperty(target, property, attributes);
                if (Array.isArray(value)) {
                    searchParams.delete(property);
                    value.forEach((element) => searchParams.append(property, element));
                }
                else {
                    searchParams.set(property, value);
                }
            }
            return true;
        },
        deleteProperty(target, property) {
            Reflect.deleteProperty(target, property);
            searchParams.delete(property);
            return true;
        },
    });
};
export const queryToSearchParams = (query) => {
    const searchParams = new URLSearchParams();
    for (const [key, value] of Object.entries(query)) {
        if (Array.isArray(value)) {
            value.filter((element) => typeof element === "string").forEach((element) => searchParams.append(key, element));
        }
        else if (typeof value === "string") {
            searchParams.set(key, value);
        }
    }
    return searchParams;
};
export const searchParamsToQuery = (searchParams) => {
    const query = {};
    for (const [key, value] of searchParams.entries()) {
        const currentValue = query[key];
        if (currentValue == null) {
            query[key] = value;
        }
        else if (Array.isArray(currentValue)) {
            query[key] = [...currentValue, value];
        }
        else {
            query[key] = [currentValue, value];
        }
    }
    return query;
};
