import { HeaderBag } from "@aws-sdk/types";
import { Fields } from "./Fields";
/**
 * Creates a proxy to a {@link Fields} object that can be used like
 * a {@link HeaderBag} object. Modifying the proxy object modifies
 * the underlying {@link Fields} object.
 *
 * @param fields {@link Fields} to proxy.
 * @returns Proxy to the given {@link Fields} object.
 * @internal To \@aws-sdk/protocol-http package.
 */
export declare const getHeadersProxy: (fields: Fields) => HeaderBag;
/**
 * Creates a new {@link Fields} with header fields populated using the given
 * {@link HeaderBag}. Ignores header keys with null or undefined values.
 *
 * @param headers Headers to get as {@link Fields}.
 * @returns A {@link Fields} populated with the given headers.
 * @internal To \@aws-sdk/protocol-http package.
 */
export declare const headersToFields: (headers: HeaderBag) => Fields;
/**
 * Creates a new {@link HeaderBag} populated using the header fields in the
 * given {@link Fields}.
 *
 * @param fields {@link Fields} to get as {@link HeaderBag}.
 * @returns A {@link HeaderBag} populated with the given fields.
 * @internal To \@aws-sdk/protocol-http package.
 */
export declare const fieldsToHeaders: (fields: Fields) => HeaderBag;
/**
 * Converts a header value into a list of field values. Ignores null and
 * undefined values. Stringifies non-string values using String().
 *
 * @param headerValue Header value to convert.
 * @returns A list of values or undefined if the given value was not defined.
 * @internal To \@aws-sdk/protocol-http package.
 */
export declare const headerValueToFieldValues: (headerValue: string) => string[] | undefined;
